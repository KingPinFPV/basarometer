version: '3.8'

services:
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: basarometer-redis
    ports:
      - "6379:6379"
    networks:
      - basarometer-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  # Main Basarometer scanner with stealth-first approach
  basarometer-scanner:
    build: .
    container_name: basarometer-scanner
    depends_on:
      - redis
    environment:
      - NODE_ENV=production
      - HEADLESS=true
      - REDIS_URL=redis://redis:6379
      - TZ=Asia/Jerusalem
      - STEALTH_MODE=true
      - CAPTCHA_STRATEGY=stealth
    volumes:
      - ./output:/app/output
      - ./debug-screenshots:/app/debug-screenshots
      - ./temp:/app/temp
      - ./config:/app/config
    ports:
      - "3000:3000"
    networks:
      - basarometer-network
    restart: unless-stopped

  # Anti-CAPTCHA service (free tier fallback)
  anti-captcha-solver:
    image: node:18-alpine
    container_name: anti-captcha-solver
    working_dir: /app
    environment:
      - NODE_ENV=production
      - ANTICAPTCHA_API_KEY=${ANTICAPTCHA_API_KEY:-}
    volumes:
      - ./utils:/app/utils
      - ./package.json:/app/package.json
    networks:
      - basarometer-network
    restart: unless-stopped
    command: |
      sh -c "
      npm install @antiadmin/anticaptchaofficial &&
      node -e 'console.log(\"Anti-CAPTCHA solver ready\"); setInterval(() => {}, 1000);'
      "

networks:
  basarometer-network:
    driver: bridge

volumes:
  redis-data: